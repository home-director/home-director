'use strict';

const moment = require('moment');
const Attribute = require('attribute');

const Thing = function(props) {
  let thing = Object.create(Thing.prototype);
  let attributes = props.attributes || {};
  thing.attributes = {};

  Object.keys(attributes).forEach((attributeName) => {
    let attribute = Attribute(attributeName, attributes[attributeName]);
    thing.attributes[attributeName] = attribute;
  });

  if (thing.attributes.switch) {
    thing.primaryAttribute = 'switch';
  } else if (thing.attributes.presence) {
    thing.primaryAttribute = 'presence';
  } else if (thing.attributes.motion) {
    thing.primaryAttribute = 'motion';
  } else if (thing.attributes.status) {
    thing.primaryAttribute = 'status';
  }

  thing.name = props.name || '<not named>';
  thing.id = props.id || '';
  thing.capabilities = props.capabilities || {};
  thing.commands = props.commands || {};
  thing.lastUpdated = moment();
  thing.history = [];

  return thing;
};

Thing.prototype.update = function(props) {
  let attribute = this.attributes[props.attribute];
  if (attribute) {
    return attribute.update(props.value);
  }
};

module.exports = Thing;
