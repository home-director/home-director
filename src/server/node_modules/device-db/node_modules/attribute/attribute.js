'use strict';

const moment = require('moment');

const Attribute = function(name, value) {
  let attribute = Object.create(Attribute.prototype);

  attribute.name = name;
  attribute.value = value;
  attribute.lastUpdated = moment();
  attribute.history = [];

  attribute.update(value);

  return attribute;
};

Attribute.prototype.update = function(value) {
  console.log('UPDATE', this.value, value);
  if (this.value == value) return false;
  this.lastUpdated = moment();

  this.updateText = this.getUpdateText(value);

  this.value = value;

  this.history.unshift({
    timestamp: this.lastUpdated.clone(),
    value: value
  });

  return this.updateText;
};

Attribute.prototype.getUpdateText = function(newValue) {
  let oldState = this.history[0];
  let now = moment();

  if (!oldState) return this.name + ' became ' + newValue;

  return this.name + ' became ' + newValue + ' after ' + now.from(oldState.timestamp, true);
};

module.exports = Attribute;
